/** Фильтрация массива*/
/*Создает массив без falsey значений. Недопустимы значения false, null, 0, "", undefined и NaN*/
_.compact([1, 0, 2, false, 3, "", "a1", null, 4, undefined, 5]); // => [ 1, 2, 3, 'a1', 5 ]

/*Оставить только уникальные элементы (бинарно)*/
_.sortedUniq([1, 1, 2]); // => [1, 2]

/*Убрать все указанные элементы из массива, задаётся аргументами, в отличие от Pull возвращает новый массив*/
_.without([2, 1, 2, 3], 1, 2); // => [3]



/** Uniq */
/*Фильтрует массив уникальных значений*/
_.uniq([2, 1, 2]); // => [2, 1]

/*Фильтрует массив уникальных значений, по функции-iteratee*/
_.uniqBy([2.1, 1.2, 2.3], Math.floor);                // => [2.1, 1.2]
_.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');  // => [{ 'x': 1 }, { 'x': 2 }]

/*Фильтрует массив уникальных значений, по функции-comparator*/
var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
 _.uniqWith(objects, _.isEqual);  // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]



/** Pull */
/*M* Убрать все указанные элементы из массива, задаётся аргументами*/
var array = ['a', 'b', 'c', 'a', 'b', 'c'];
_.pull(array, 'a');       // => [ 'b', 'c', 'b', 'c' ]
_.pull(array, 'a', 'c');  // => [ 'b', 'b' ]

/*M* Убрать все указанные элементы из массива, задаётся массивом*/
var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 _.pullAll(array, ['a', 'c']);  // => ['b', 'b']

/*M* Убрать все указанные элементы из массива, задаётся массивом, фильтр по указанному свойству*/
var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
 _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');// => [{ 'x': 2 }]

/*M* Убрать все указанные элементы из массива, задаётся массивом, фильтр по указанной функции*/
var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
 _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual); // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]

/*M* Оставить только указанные элементы, остальные переместить*/
var array = ['a', 'b', 'c', 'd'];
var pulled = _.pullAt(array, [1, 3]);
console.log(array);  // => ['a', 'c']
console.log(pulled); // => ['b', 'd']

/*M* Оставить только элементы не удовлетворяющие условию, остальные переместить */
var array = [1, 2, 3, 4];
var evens = _.remove(array, function(n) {
  return n % 2 == 0;});
console.log(array);// => [1, 3]
console.log(evens);// => [2, 4]